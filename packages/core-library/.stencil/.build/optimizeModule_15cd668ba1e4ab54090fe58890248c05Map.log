{"version":3,"names":["tailwindCss","AuthSigninStyle0","AuthSignin","this","handleEmailChange","event","email","target","value","handleRememberMeChange","rememberMe","checked","handleSubmit","preventDefault","checkValidity","formSubmitted","emit","password","formValid","reportValidity","handlePasswordChange","render","h","key","class","src","alt","formTitle","action","method","onSubmit","htmlFor","onInput","id","name","type","autocomplete","required","href","FeedbackAlertStyle0","FeedbackAlert","getAlertClasses","viewBox","fill","d","label","description","needAction","onClick","okClick","okText","cancelClick","cancelText"],"sources":["src/styles/tailwind.css?tag=auth-signin&encapsulation=shadow","src/components/auth-signin/auth-signin.tsx","src/styles/tailwind.css?tag=feedback-alert&encapsulation=shadow","src/components/feedback-alert/feedback-alert.tsx"],"sourcesContent":["@tailwind base;\n@tailwind components;\n@tailwind utilities;","import { Component, Prop, h, Event, EventEmitter, State } from '@stencil/core';\n\nexport type AuthSignInProps = {\n    email: string;\n    password: string;\n    rememberMe: boolean;\n};\n\n@Component({\n    tag: 'auth-signin',\n    styleUrl: '../../styles/tailwind.css',\n    shadow: true,\n})\nexport class AuthSignin {\n    @Prop() formTitle: string = 'Sign in to your account';\n    @Event() formSubmitted: EventEmitter<AuthSignInProps>;\n    @Event() formValid: EventEmitter<boolean>;\n\n    @State() email: string = '';\n    @State() password: string = '';\n    @State() rememberMe: boolean = false;\n\n    handleEmailChange = (event: Event) => {\n        this.email = (event.target as HTMLInputElement).value;\n    }\n    handlePasswordChange(event: Event) {\n        this.password = (event.target as HTMLInputElement).value;\n    }\n    handleRememberMeChange = (event: Event) => {\n        this.rememberMe = (event.target as HTMLInputElement).checked;\n    }\n    handleSubmit = (event: Event) => {\n        event.preventDefault();\n        if ((event.target as HTMLFormElement).checkValidity()) {\n            this.formSubmitted.emit({ email: this.email, password: this.password, rememberMe: this.rememberMe });\n            this.formValid.emit(true);\n        } else {\n            (event.target as HTMLFormElement).reportValidity();\n            this.formValid.emit(false);\n        }\n    }\n\n    render() {\n        return (\n            <div class=\"flex min-h-full flex-col justify-center py-12 sm:px-6 lg:px-8\">\n                <div class=\"sm:mx-auto sm:w-full sm:max-w-md\">\n                    <img class=\"mx-auto h-10 w-auto\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d0/Emirates_logo.svg/200px-Emirates_logo.svg.png\" alt=\"Emirates\" />\n                    <h2 class=\"mt-6 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">{this.formTitle}</h2>\n                </div>\n\n                <div class=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n                    <div class=\"bg-white px-6 py-12 shadow sm:rounded-lg sm:px-12\">\n                        <form class=\"space-y-6\" action=\"#\" method=\"POST\" onSubmit={this.handleSubmit}>\n                            <div>\n                                <label htmlFor=\"email\" class=\"block text-sm font-medium leading-6 text-gray-900\">Email address</label>\n                                <div class=\"mt-2\">\n                                    <input onInput={this.handleEmailChange} id=\"email\" name=\"email\" type=\"email\" autocomplete=\"email\" required class=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                                </div>\n                            </div>\n\n                            <div>\n                                <label htmlFor=\"password\" class=\"block text-sm font-medium leading-6 text-gray-900\">Password</label>\n                                <div class=\"mt-2\">\n                                    <input onInput={this.handlePasswordChange} id=\"password\" name=\"password\" type=\"password\" autocomplete=\"current-password\" required class=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                                </div>\n                            </div>\n\n                            <div class=\"flex items-center justify-between\">\n                                <div class=\"flex items-center\">\n                                    <input onInput={this.handleRememberMeChange} id=\"remember-me\" name=\"remember-me\" type=\"checkbox\" class=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600\" />\n                                    <label htmlFor=\"remember-me\" class=\"ml-3 block text-sm leading-6 text-gray-900\">Remember me</label>\n                                </div>\n\n                                <div class=\"text-sm leading-6\">\n                                    <a href=\"#\" class=\"font-semibold text-indigo-600 hover:text-indigo-500\">Forgot password?</a>\n                                </div>\n                            </div>\n\n                            <div>\n                                <button type=\"submit\" class=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\">Sign in</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","@tailwind base;\n@tailwind components;\n@tailwind utilities;","import { Component, Event, EventEmitter, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'feedback-alert',\n  styleUrl: '../../styles/tailwind.css',\n  shadow: true,\n})\nexport class FeedbackAlert {\n  @Prop() type: 'success' | 'error' | 'warning' = 'success';\n  @Prop() needAction: boolean = false;\n  @Prop() label: string = 'Feedback';\n  @Prop() description: string = '';\n  @Prop() okText: string = 'Ok';\n  @Prop() cancelText: string = 'Cancel';\n  @Event() okClick: EventEmitter;\n  @Event() cancelClick: EventEmitter;\n\n\n  getAlertClasses() {\n    switch (this.type) {\n      case 'success':\n        return 'bg-green-50 text-green-800';\n      case 'error':\n        return 'bg-red-50 text-red-800';\n      case 'warning':\n        return 'bg-yellow-50 text-yellow-800';\n      default:\n        return 'bg-green-50 text-green-800';\n    }\n  }\n\n  render() {\n    return (\n      <div class={`rounded-md p-4 ${this.getAlertClasses()}`}>\n        <div class=\"flex\">\n          <div class=\"flex-shrink-0\">\n            <svg class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n              <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\" clip-rule=\"evenodd\" />\n            </svg>\n          </div>\n          <div class=\"ml-3\">\n            <h3 class=\"text-sm font-medium\">{this.label}</h3>\n            <div class=\"mt-2 text-sm\">\n              <p>{this.description}</p>\n            </div>\n            {this.needAction && (\n            <div class=\"mt-4\">\n              <div class=\"-mx-2 -my-1.5 flex\">\n                <button type=\"button\" class={`rounded-md px-2 py-1.5 text-sm font-medium hover:bg-${this.type}-100 focus:outline-none focus:ring-2 focus:ring-${this.type}-600 focus:ring-offset-2 focus:ring-offset-${this.type}-50`} onClick={() => this.okClick.emit()}>{this.okText}</button>\n                <button type=\"button\" class={`ml-3 rounded-md px-2 py-1.5 text-sm font-medium text-${this.type}-800 bg-${this.type}-50 hover:bg-${this.type}-100 focus:outline-none focus:ring-2 focus:ring-${this.type}-600 focus:ring-offset-2 focus:ring-offset-${this.type}-50`} onClick={() => this.cancelClick.emit()}>{this.cancelText}</button>\n              </div>\n            </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}"],"mappings":"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"}